/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Visual;

import java.awt.Color;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;
import java.io.PrintWriter;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author andy
 */
public class Params extends javax.swing.JFrame {
 private DefaultTableModel tableModelFuentes;
 private DefaultTableModel tableModelFuentesConfig;
  private ArrayList<Source> fuentes;
  private ArrayList<String> fuentesConfig;
  private String separator = File.separator; 
  private static int tipoSeleccionado; 

    public static void setTipoSeleccionado(int tipoSeleccionado) {
        Params.tipoSeleccionado = tipoSeleccionado;
    }

    
    /**
     * Creates new form Parametros
     */
    public Params() {
        fuentes=new ArrayList<>();
        fuentesConfig=new ArrayList<>();
        tipoSeleccionado=0;
        cargarFuentes();
        
        initComponents();
        fillTable();
        inhabilitarCampos();
        jLabel1.setVisible(false);
        setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jPanel3 = new javax.swing.JPanel();
        jPanel7 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTable4 = new javax.swing.JTable();
        jPanel8 = new javax.swing.JPanel();
        jButton10 = new javax.swing.JButton();
        jButton12 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jSpinner2 = new javax.swing.JSpinner();
        jLabel5 = new javax.swing.JLabel();
        jSpinner4 = new javax.swing.JSpinner();
        jComboBoxTiempo2 = new javax.swing.JComboBox<>();
        jCheckBox4 = new javax.swing.JCheckBox();
        jCheckBox2 = new javax.swing.JCheckBox();
        jLabel9 = new javax.swing.JLabel();
        jComboBoxTamaño = new javax.swing.JComboBox<>();
        jSpinner11 = new javax.swing.JSpinner();
        jLabel4 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jButton11 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jButtonDeleteSource = new javax.swing.JButton();
        jPanel9 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jButton8 = new javax.swing.JButton();
        jButton13 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel7.setBorder(javax.swing.BorderFactory.createTitledBorder("Fuentes de origen"));

        jTable4.setModel(getDefaultTableModelFuentes());
        jTable4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable4MouseClicked(evt);
            }
        });
        jScrollPane4.setViewportView(jTable4);

        jPanel8.setBorder(javax.swing.BorderFactory.createTitledBorder("Parámetros"));

        jButton10.setText("Añadir");
        jButton10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton10ActionPerformed(evt);
            }
        });

        jButton12.setText("Restablecer");
        jButton12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton12ActionPerformed(evt);
            }
        });

        jLabel3.setText("Cantidad de correos:");

        jLabel5.setText("Frecuencia de envío:");

        jSpinner4.setModel(new javax.swing.SpinnerNumberModel(0, 0, null, 1));
        jSpinner4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jSpinner4MouseClicked(evt);
            }
        });

        jComboBoxTiempo2.setFont(new java.awt.Font("Cambria", 1, 12)); // NOI18N
        jComboBoxTiempo2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Milisegundos", "Segundos", "Minutos", "Horas" }));
        jComboBoxTiempo2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxTiempo2ActionPerformed(evt);
            }
        });

        jCheckBox4.setText("Variar razón de envío");
        jCheckBox4.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);

        jCheckBox2.setText("Sustitución de letra:");
        jCheckBox2.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);

        jLabel9.setText("Tamaño mínimo de correos: ");

        jComboBoxTamaño.setFont(new java.awt.Font("Cambria", 1, 12)); // NOI18N
        jComboBoxTamaño.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Bytes", "KB", "MB", "GB" }));
        jComboBoxTamaño.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxTamañoActionPerformed(evt);
            }
        });

        jSpinner11.setModel(new javax.swing.SpinnerNumberModel(0, 0, null, 1));

        jLabel4.setText("Variar razón de envío: ");

        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jSpinner2, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(279, 279, 279)
                        .addComponent(jCheckBox4, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jSpinner11, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jComboBoxTamaño, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addGap(521, 521, 521)
                        .addComponent(jButton12)
                        .addGap(18, 18, 18)
                        .addComponent(jButton10))
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jSpinner4, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(4, 4, 4)
                        .addComponent(jComboBoxTiempo2, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(146, 146, 146)
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel8Layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jCheckBox2, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(10, 10, 10))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(jSpinner2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jCheckBox4))
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addGap(40, 40, 40)
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel8Layout.createSequentialGroup()
                                .addGap(1, 1, 1)
                                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jSpinner4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jComboBoxTiempo2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(jCheckBox2)))
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addGap(44, 44, 44)
                        .addComponent(jLabel5)))
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addGap(56, 56, 56)
                        .addComponent(jLabel9))
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(5, 5, 5)
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jSpinner11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jComboBoxTamaño, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(28, 28, 28)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton12)
                    .addComponent(jButton10))
                .addContainerGap(29, Short.MAX_VALUE))
        );

        jButton11.setText("Guardar configuracion...");
        jButton11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton11ActionPerformed(evt);
            }
        });

        jTable2.setModel(getDefaultTableModelFuentesConf());
        jScrollPane2.setViewportView(jTable2);

        jLabel1.setText("Eliminar");
        jLabel1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel1MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jLabel1MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jLabel1MouseExited(evt);
            }
        });

        jButtonDeleteSource.setText("Eliminar fuente");
        jButtonDeleteSource.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDeleteSourceActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 242, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 440, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton11)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE))))
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButtonDeleteSource)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton11))
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 273, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButtonDeleteSource)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        jPanel9.setBorder(javax.swing.BorderFactory.createTitledBorder("Añadir nueva fuente de origen"));

        jLabel2.setText("Carpeta de Origen:");

        jButton8.setText("Examinar...");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        jButton13.setText("Añadir");
        jButton13.setEnabled(false);
        jButton13.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton13ActionPerformed(evt);
            }
        });

        jButton2.setText("Definir configuración");
        jButton2.setEnabled(false);
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 614, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jButton2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton8, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jButton13, javax.swing.GroupLayout.Alignment.TRAILING))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel9Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton8))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton13)
                    .addComponent(jButton2)))
        );

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap(20, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(32, 32, 32))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 43, Short.MAX_VALUE)
                .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jButton1.setText("Atras");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton1)
                .addGap(22, 22, 22))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
       Principal p = new Principal();   
       p.setVisible(true);
       Principal.setConfigurations(getFiles("data"+separator+"Configuraciones"+separator));
       this.dispose();
        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jSpinner4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jSpinner4MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_jSpinner4MouseClicked

    private void jComboBoxTiempo2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxTiempo2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBoxTiempo2ActionPerformed

    private void jComboBoxTamañoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxTamañoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBoxTamañoActionPerformed

    private void jTable4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable4MouseClicked
        Source fuente=fuentes.get(jTable4.getSelectedRow());
        if(fuente.getConfiguration()==1){
            inhabilitarCampos();
            mostrar1raConf(true);
        }
        if(fuente.getConfiguration()==2){
            inhabilitarCampos();
            mostrar2daConf(true);
        }
         if(fuente.getConfiguration()==3){
             inhabilitarCampos();
             mostrar3raConf(true);
        }
        
    }//GEN-LAST:event_jTable4MouseClicked

    private void jButton10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton10ActionPerformed
       if(Integer.valueOf(jSpinner4.getValue().toString())!=0 && Integer.valueOf(jSpinner2.getValue().toString())!=0){
        boolean reemplazar=false;
           if(hasSidoAgregada(fuentes.get(jTable4.getSelectedRow()).getName())){
             if (JOptionPane.showConfirmDialog(Params.this, " Ya ha sido agregada esa fuente a la configuración. ¿Desea reemplazarla?  ", "Confirmación", JOptionPane.YES_NO_OPTION, JOptionPane.INFORMATION_MESSAGE) == JOptionPane.YES_OPTION) {					
					         reemplazar=true;
                                                 eliminarAnterior(fuentes.get(jTable4.getSelectedRow()).getName());
			} 
        }    
       if(!hasSidoAgregada(fuentes.get(jTable4.getSelectedRow()).getName())||reemplazar){
           
      
        String conf="";
        int frecuencia=Integer.valueOf(jSpinner4.getValue().toString());
      if(String.valueOf(jComboBoxTiempo2.getSelectedItem()).equalsIgnoreCase("Segundos")){
                    frecuencia=frecuencia*1000;
                }
                if(String.valueOf(jComboBoxTiempo2.getSelectedItem()).equalsIgnoreCase("Minutos")){
                    frecuencia=frecuencia*60000;
                }
                if(String.valueOf(jComboBoxTiempo2.getSelectedItem()).equalsIgnoreCase("Horas")){
                    frecuencia=frecuencia*3600000;
                }
        if(fuentes.get(jTable4.getSelectedRow()).getConfiguration()==1){
           conf=fuentes.get(jTable4.getSelectedRow()).getName()+":CantCorreos="+jSpinner2.getValue()+",Frecuencia="+frecuencia+",Obfuscacion="+jCheckBox2.isSelected()+",Tipo=1";
      }
      if(fuentes.get(jTable4.getSelectedRow()).getConfiguration()==2){
         int  tamañoMinEmailInfo=Integer.valueOf(jSpinner11.getValue().toString());
          if(String.valueOf(jComboBoxTamaño.getSelectedItem()).equalsIgnoreCase("KB")){
            tamañoMinEmailInfo=tamañoMinEmailInfo*1024;
        }
        if(String.valueOf(jComboBoxTamaño.getSelectedItem()).equalsIgnoreCase("MB")){
            tamañoMinEmailInfo=tamañoMinEmailInfo*1024000;
        }
        if(String.valueOf(jComboBoxTamaño.getSelectedItem()).equalsIgnoreCase("GB")){
            tamañoMinEmailInfo=tamañoMinEmailInfo*1024000000;
        }  
          conf=fuentes.get(jTable4.getSelectedRow()).getName()+":CantCorreos="+jSpinner2.getValue()+",Frecuencia="+frecuencia+",TamañoMin="+tamañoMinEmailInfo+",Tipo=2";
      }
      if(fuentes.get(jTable4.getSelectedRow()).getConfiguration()==3){
           conf=fuentes.get(jTable4.getSelectedRow()).getName()+":CantCorreos="+jSpinner2.getValue()+",Frecuencia="+frecuencia+",Aleatorización="+jCheckBox4.isSelected()+",Tipo=3";
      }
    
        fuentesConfig.add(conf);
        fillTableConf();}
       
       }
       
           
       
       else{
           Error.show("Debe llenar los campos requeridos");
       }
    }//GEN-LAST:event_jButton10ActionPerformed

    private void jLabel1MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel1MouseEntered
        jLabel1.setForeground(Color.RED);
    }//GEN-LAST:event_jLabel1MouseEntered

    private void jLabel1MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel1MouseExited
        jLabel1.setForeground(Color.BLACK);
    }//GEN-LAST:event_jLabel1MouseExited

    private void jLabel1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel1MouseClicked
        if(jTable2.getSelectedRow()!=-1){
            fuentesConfig.remove(jTable2.getSelectedRow());
            fillTableConf();
        } 
        else{
            Error.show("Debe seleccionar la fuente que desea eliminar");
        }
    }//GEN-LAST:event_jLabel1MouseClicked

    private void jButton11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton11ActionPerformed
          new Browser(null,2,"data"+separator+"Configuraciones"+separator,new Action() {
            @Override public void actionPerformed(String path) {
                try {
                    FileWriter fw=new FileWriter(path+".txt");
                    BufferedWriter bf=new BufferedWriter(fw);
                    PrintWriter text=new PrintWriter(bf);
                    String cuerpo="";
                    for(int i=0;i<fuentesConfig.size();i++){
                        cuerpo=cuerpo+fuentesConfig.get(i)+"-";
                    }
                    text.print(cuerpo);
                    text.close();
                    
                } catch (IOException ex) {
                    Logger.getLogger(Params.class.getName()).log(Level.SEVERE, null, ex);
                }
              
            }
        }).setVisible(true);    
    }//GEN-LAST:event_jButton11ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        new Browser(null,1,"data"+separator,new Action() {
            @Override public void actionPerformed(String path) {
                jTextField2.setText(path);
                jButton2.setEnabled(true);
                jButton13.setEnabled(true);
            }
        }).setVisible(true);   
        
    }//GEN-LAST:event_jButton8ActionPerformed

    private void jButton13ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton13ActionPerformed
if(tipoSeleccionado!=0){
     String nombreCarpeta="";
  File file =new File(jTextField2.getText());
  nombreCarpeta=file.getName();
      File carpetaNueva=new File("data"+separator+"dataset"+separator+nombreCarpeta);
      carpetaNueva.mkdir();
        copiarFicheros(getFiles(jTextField2.getText()), nombreCarpeta);
        Source fuente =new Source(nombreCarpeta, tipoSeleccionado);
    try {
        actualizarFuentes(fuente);
    } catch (IOException ex) {
        Logger.getLogger(Params.class.getName()).log(Level.SEVERE, null, ex);
    }
}
else{
    Error.show("Primero debe especificar el tipo de configuración");
}
      
    }//GEN-LAST:event_jButton13ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
     DefinirConf definirConf=new DefinirConf();
     definirConf.setVisible(true);

        
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton12ActionPerformed
        System.out.println(tipoSeleccionado);
    }//GEN-LAST:event_jButton12ActionPerformed

    private void jButtonDeleteSourceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDeleteSourceActionPerformed
        // TODO add your handling code here:
        if(jTable4.getSelectedRow() != -1){
            if(JOptionPane.showConfirmDialog(Params.this, "  ¿Está seguro que desea eliminar esa fuente?  ", "Confirmación", JOptionPane.YES_NO_OPTION, JOptionPane.INFORMATION_MESSAGE) == JOptionPane.YES_OPTION){                
                File file = new File("data" + File.separator + "dataset" + File.separator +jTable4.getValueAt(jTable4.getSelectedRow(), 0));                
                deleteFolder(file);             
            if(file.delete()){
                JOptionPane.showMessageDialog(null, "Eliminado con éxito");
            }
            
                try {
                    eliminarFuenteDelFichero(String.valueOf(jTable4.getValueAt(jTable4.getSelectedRow(), 0)));
                } catch (IOException ex) {
                    Logger.getLogger(Params.class.getName()).log(Level.SEVERE, null, ex);
                }
            cargarFuentes();
            fillTable();
            } else {
                Error.show("Ha ocurrido un error al intentar eliminar la fuente");
            }           
        } else {
            Error.show("Debe seleccionar una fuente");
        }
    }//GEN-LAST:event_jButtonDeleteSourceActionPerformed

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Params.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Params.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Params.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Params.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Params().setVisible(true);
            }
        });
    }
    private DefaultTableModel getDefaultTableModelFuentes() {
        if (tableModelFuentes == null) {
            
            Object[] object;
            object = new Object[]{"Fuente"};
            
            tableModelFuentes = new DefaultTableModel(object, 0);
            
        }
        return tableModelFuentes;
    }
     private void fillTable() {
        
        tableModelFuentes.setRowCount(0);

        for (int i = 0; i < fuentes.size(); i++) {

            tableModelFuentes.addRow(new Object[]{fuentes.get(i).getName()});
        }
    }
      private DefaultTableModel getDefaultTableModelFuentesConf() {
        if (tableModelFuentesConfig == null) {
            
            Object[] object;
            object = new Object[]{"Perfiles"};
            
            tableModelFuentesConfig = new DefaultTableModel(object, 0);
            
        }
        return tableModelFuentesConfig;
    }
     private void fillTableConf() {
        
        tableModelFuentesConfig.setRowCount(0);

        for (int i = 0; i < fuentesConfig.size(); i++) {

            tableModelFuentesConfig.addRow(new Object[]{fuentesConfig.get(i)});
        }
        if(fuentesConfig.size()>0){
            jLabel1.setVisible(true);
        }
               if(fuentesConfig.size()==0){
            jLabel1.setVisible(false);
        }

    }
     private void mostrar1raConf(boolean permitir){
         jLabel3.setVisible(permitir);
         jLabel5.setVisible(permitir);
         jSpinner2.setVisible(permitir);
         jSpinner4.setVisible(permitir);
         jComboBoxTiempo2.setVisible(permitir);
         jCheckBox2.setVisible(permitir);
         
     }
       private void mostrar2daConf(boolean permitir){
         jLabel3.setVisible(permitir);
         jLabel5.setVisible(permitir);
         jSpinner2.setVisible(permitir);
         jSpinner4.setVisible(permitir);
        jComboBoxTiempo2.setVisible(permitir);
        jLabel9.setVisible(permitir);
        jSpinner11.setVisible(permitir);
        jComboBoxTamaño.setVisible(permitir);
     }
         private void mostrar3raConf(boolean permitir){
         jLabel3.setVisible(permitir);
         jLabel5.setVisible(permitir);
         jSpinner2.setVisible(permitir);
         jSpinner4.setVisible(permitir);
         jComboBoxTiempo2.setVisible(permitir);
         jCheckBox4.setVisible(permitir);
     }
    private void inhabilitarCampos(){
         jLabel3.setVisible(false);
         jLabel5.setVisible(false);
         jSpinner2.setVisible(false);
         jSpinner2.setValue(0);
         jSpinner4.setVisible(false);
         jSpinner4.setValue(0);
         jComboBoxTiempo2.setVisible(false);
         jCheckBox2.setVisible(false);
         jCheckBox2.setSelected(false);
         jLabel9.setVisible(false);
         jSpinner11.setVisible(false);
         jSpinner11.setValue(0);
         jComboBoxTamaño.setVisible(false);
         jCheckBox4.setVisible(false);
         jCheckBox4.setSelected(false);
     }
    public boolean hasSidoAgregada(String fuente){
        boolean aux=false;
        for(int i=0;i<fuentesConfig.size()&&!aux;i++){
             aux=fuentesConfig.get(i).contains(fuente);
        }
        return aux;
    }
    public void eliminarAnterior(String fuente){
        
        for(int i=0;i<fuentesConfig.size();i++){
             if(fuentesConfig.get(i).contains(fuente)){
                 fuentesConfig.remove(i);
             }
        }
        
    }
     public static File[] getFiles(String dir_path) {
       
        File f = new File(dir_path);
        File[] arr_content = null;
        
        if (f.isDirectory()) {
            
            ArrayList<String> res = new ArrayList<>();
            arr_content = f.listFiles();

        } else {
            System.err.println("¡ Path NO válido !");
        }
        
        return arr_content;
    }
    public static void copiarFicheros(File[] files,String carpetaDestino){
        if(files.length>0){
            for(int i=0;i<files.length;i++){
                File origen=new File(files[i].getAbsolutePath());
                String prueba =files[i].getName();
                File destino=new File("data"+File.separator +"dataset"+File.separator+carpetaDestino+File.separator+prueba);
try {
                        InputStream in = new FileInputStream(origen);
                        OutputStream out = new FileOutputStream(destino);

                        byte[] buf = new byte[1024];
                        int len;

                        while ((len = in.read(buf)) > 0) {
                                out.write(buf, 0, len);
                        }

                        in.close();
                        out.close();
                        
                } catch (IOException ioe){
                        ioe.printStackTrace();
                }
                
            }
            JOptionPane.showMessageDialog(null,"La operación fué un éxito","Mensaje",1);
        }
        
        
        
        
    }
    private void cargarFuentes(){
        String cadena="";
       fuentes.clear();
         String[] arr=new String[1000];
     try {
         FileReader f=new FileReader("data"+separator+"FuentesGuardadas.txt");
         BufferedReader b=new BufferedReader(f);
         while((cadena=b.readLine())!=null){
             System.out.println(cadena);
              arr=cadena.split(",");
         }
        
         b.close();
         for(int i=0;i<arr.length;i++){
             String[] fuenteTipo=arr[i].split(":");
             Source fuente=new Source(fuenteTipo[0],Integer.valueOf(fuenteTipo[1]));
             fuentes.add(fuente);
         }
         
     } catch (FileNotFoundException ex) {
         Logger.getLogger(Params.class.getName()).log(Level.SEVERE, null, ex);
     } catch (IOException ex) {
         Logger.getLogger(Params.class.getName()).log(Level.SEVERE, null, ex);
     } 
    }
    public void actualizarFuentes(Source fuente) throws FileNotFoundException, IOException{
          String cadena="";
          String cuerpo="";
       FileReader f=new FileReader("data"+separator+"FuentesGuardadas.txt");
         BufferedReader b=new BufferedReader(f);
         while((cadena=b.readLine())!=null){
             cuerpo=cadena;
             
         }
         b.close();
         cuerpo=cuerpo+","+fuente.getName()+":"+fuente.getConfiguration();
        FileWriter fw=new FileWriter("data"+separator+"FuentesGuardadas.txt");
                    BufferedWriter bf=new BufferedWriter(fw);
                    PrintWriter text=new PrintWriter(bf);
                    text.print(cuerpo);
                    text.close();
      cargarFuentes();
      fillTable();
    }
    public void eliminarFuenteDelFichero (String name) throws FileNotFoundException, IOException{
         String cadena="";
          String cuerpo="";
          String cuerpoFinal="";
       FileReader f=new FileReader("data"+separator+"FuentesGuardadas.txt");
         BufferedReader b=new BufferedReader(f);
         while((cadena=b.readLine())!=null){
             cuerpo=cadena;
             
         }
         b.close();
        String[] aux=cuerpo.split(",");
        ArrayList<String> list=new ArrayList<>();
        for(int i=0;i<aux.length;i++){
            if(!aux[i].contains(name)){
            list.add(aux[i]);
        }
           
        }
         for (int j = 0; j < list.size(); j++) {
                if(j == list.size() - 1){
                    cuerpoFinal=cuerpoFinal+list.get(j);
                } else{
                    cuerpoFinal=cuerpoFinal+list.get(j)+",";
                }
            }
        FileWriter fw=new FileWriter("data"+separator+"FuentesGuardadas.txt");
                    BufferedWriter bf=new BufferedWriter(fw);
                    PrintWriter text=new PrintWriter(bf);
                    text.print(cuerpoFinal);
                    text.close();
        
    }
    
    public static void deleteFolder(File file) {
        File[] files = file.listFiles();
        for(int i = 0; i < files.length; i++){
            if(files[i].isDirectory()){
                deleteFolder(files[i]);
            }
            files[i].delete();
        }
    }
    


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton11;
    private javax.swing.JButton jButton12;
    private javax.swing.JButton jButton13;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButtonDeleteSource;
    private javax.swing.JCheckBox jCheckBox2;
    private javax.swing.JCheckBox jCheckBox4;
    private javax.swing.JComboBox<String> jComboBoxTamaño;
    private javax.swing.JComboBox<String> jComboBoxTiempo2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JSpinner jSpinner11;
    private javax.swing.JSpinner jSpinner2;
    private javax.swing.JSpinner jSpinner4;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JTable jTable4;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    // End of variables declaration//GEN-END:variables
}
