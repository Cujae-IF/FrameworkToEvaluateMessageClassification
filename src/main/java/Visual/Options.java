/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Visual;

import Model.FilesSend;
import Source.Classifier;
import Visual.*;
import com.google.gson.Gson;
import com.sun.jersey.api.client.Client;
import com.sun.jersey.api.client.ClientResponse;
import com.sun.jersey.api.client.WebResource;
import java.io.ByteArrayOutputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author Miguel
 */
public class Options extends javax.swing.JFrame {
private  String separator = File.separator; 
    /**
     * Creates new form Opciones
     */
    public Options() {
        initComponents();
        setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        spamPath = new javax.swing.JLabel();
        hamPath = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Opciones");

        jLabel1.setText("Importar correos para actualizar base de conocimientos:");

        jButton1.setText("Examinar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel2.setText("Seleccionar los correos que desea importar:");

        jButton3.setText("Importar");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText("Atr√°s");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        spamPath.setForeground(new java.awt.Color(255, 51, 51));
        spamPath.setText(" ");

        hamPath.setForeground(new java.awt.Color(255, 51, 51));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton1))
                    .addComponent(spamPath, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(70, 70, 70)
                        .addComponent(hamPath, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(94, 94, 94))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(0, 183, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(13, 13, 13)
                        .addComponent(jButton4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton3)))
                .addGap(32, 32, 32))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addComponent(jLabel1)
                .addGap(34, 34, 34)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jButton1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(spamPath)
                .addGap(42, 42, 42)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton3)
                    .addComponent(jButton4))
                .addGap(4, 4, 4)
                .addComponent(hamPath, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        this.dispose();       
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
     new Browser(null,1,"data"+separator,new Action() {
            @Override public void actionPerformed(String path) {
                spamPath.setText(path);
                spamPath.setVisible(false);
                
            }
        }).setVisible(true);       
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        try {
            //      if(spamPath.getText().equalsIgnoreCase("")||hamPath.getText().equalsIgnoreCase("")){
                //           Error.show("Formulario incompleto");
                //      }
            //      else{
                //
                //           File vocabulary = new File("data"+separator+"vocabulary.txt");
                //            File spamPath = new File(this.spamPath.getText());
                //            File hamPath = new File(this.hamPath.getText());
                //          try {
                    //              Classifier.getInstance().initWordbook(vocabulary,spamPath,hamPath);
                    //              System.out.println("ya se actualizo");
                    //          } catch (Exception ex) {
                    //              Logger.getLogger(Options.class.getName()).log(Level.SEVERE, null, ex);
                    //          }
                //      }
            Gson gson = new Gson();
            File[] files = Profile.getFiles(spamPath.getText());
            ArrayList<FilesSend> filesSend = new ArrayList<>();

            List<byte[]> archivos = convertirArchivos(files);
            ArrayList<String> realLabels = extractLabel(files);

            for (int i = 0; i < archivos.size(); i++) {
                FilesSend file = new FilesSend();
                file.setArray(archivos.get(i));
                file.setLabel(realLabels.get(i));
                filesSend.add(file);
            }

            String jsonArray = gson.toJson(filesSend);
            System.out.println(jsonArray);
            for (int i = 0; i < Principal.getClasifiers().size(); i++) {
                Client client = Client.create();
                WebResource webResource = client
                .resource(Principal.getClasifiers().get(i).getTrainURL());

                ClientResponse response = webResource.type("application/json")
                .post(ClientResponse.class, jsonArray);

                if (response.getStatus() != 201) {
                    throw new RuntimeException("Failed : HTTP error code : "
                        + response.getStatus());
                }

                String outputJson = response.getEntity(String.class);
                JOptionPane.showMessageDialog(null, Principal.getClasifiers().get(i).getName() + " "+ outputJson);
            }
        } catch (IOException ex) {
            Logger.getLogger(Options.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_jButton3ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Options.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Options.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Options.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Options.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Options().setVisible(true);
            }
        });
    }
    
     public static  List<byte[]> convertirArchivos(File[] selectedFile) throws java.io.FileNotFoundException, java.io.IOException{
        //TODO write your implementation code here:
             
        
        byte[] bytes=null;
        List<byte[]> archivos=new ArrayList<byte[]>();     
        for(int i=0;i<selectedFile.length;i++){ 
            
        FileInputStream fis=new FileInputStream(selectedFile[i]);
        ByteArrayOutputStream bos=new ByteArrayOutputStream();
        byte[] buf=new byte[1024];
        for(int readNum;(readNum=fis.read(buf))!=-1;){
            bos.write(buf,0,readNum);
        }
        bytes=bos.toByteArray();
        archivos.add(bytes);
        }
        
        return archivos;
      
        
     }
    
     public static ArrayList<String> extractLabel(File[] files){
         ArrayList<String> aux = new ArrayList<>();
        
        for (int i = 0; i < files.length; i++) {
                
            if (files[i].getAbsolutePath().contains("(SPAM)")) {                
                aux.add("SPAM");
            } else {
               aux.add("HAM");
            }
        }
              
            return aux;
     }
        

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel hamPath;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel spamPath;
    // End of variables declaration//GEN-END:variables
}
